#+LATEX_CLASS: org-notes
#+title: RatesMC Training
#+author: Richard Longland
#+options: toc:nil
2023-08-29
* Introduction
  I plan to give you enough training so that you don't bug me with questions!

* The template file
  #+BEGIN_SRC text
    39K(p,g)40Ca
    ********************************************************************************************************************************************************************
    1H              ! Zproj                           (or nuclide's name to use AME2020)
    39K             ! Ztarget
    4He             ! Zexitparticle                   (=0 when only 2 channels open)
    1H              ! Aproj                           (input either NUCLEAR MASS in amu, or the nuclide's name, e.g. 23Na)
    39K             ! Atarget   
    4He             ! Aexitparticle                   (=0 when only 2 channels open)
    1H              ! Jproj                           (or nuclide's name to use NuBase 2020)
    39K             ! Jtarget
    4He             ! Jexitparticle                   (=0 when only 2 channels open)
    AME             ! projectile separation energy    (NUCLEAR Q value; enter AME if nuclide names are used)
    AME             ! exit particle separation energy (=0 when only 2 channels open; enter AME if nuclide names are used)
    1.25            ! Radius parameter R0 (fm)
    2               ! Gamma-ray channel number        (=2 if ejectile is a g-ray; =3 otherwise)
    ********************************************************************************************************************************************************************
    1.0             ! Minimum energy for numerical integration (keV)
    10000           ! Number of random samples (>5000 for better statistics)
    0               ! =0 for rate output at all temperatures; =NT for rate output at selected temperatures
    0 0             ! (wg, E): =0 for no correlation; =1 for correlation
    ********************************************************************************************************************************************************************
    Non-resonant table  
    Enter comma-separated energies (keV) on 1st line, S-factors (keV.b) on 2nd line, and fractional uncertainties on 3rd line
    0      50  100  150  200  250  300  350  400  450  500  550  600  650  700  750  800  850  900  950  1000
    124   119  115  112  108  105  102   99   97   95   93   91   89   88   87   87   86   86   86   86    87
    -10    -9   -8   -7   -6   -5   -4   -3   -3   -3   -3   -3   -3   -2   -2   -2   -2   -2   -1  0.4   0.4
    0  0
    0  0
    0  0
    ********************************************************************************************************************************************************************
    Resonant Contribution
    Note: G1 = entrance channel, G2 = exit channel, G3 = spectator channel !! Ecm, Exf in (keV); wg, Gx in (eV) !!
    Note: if Er<0, theta^2=C2S*theta_sp^2 must be entered instead of entrance channel partial width; negative values of Dwg, DGx indicate factor uncertainties
    Ecm(keV) DEcm(keV) wg(eV)     Dwg(eV)    J   G1(eV)    DG1(eV)   L1  G2(eV)    DG2(eV)   L2  G3(eV)    DG3(eV)   L3  Exf(keV) Int  Corr/Frac
    0.0      0.00      0          0          0   0.0E+00   0.0E+00   0   0.0E+00   0.0E+00   0   0.00E+00  0.00E+00  0   0.0      0   
    ********************************************************************************************************************************************************************
    Upper Limits of Resonances
    Note: enter partial width upper limit by chosing non-zero value for PT, where PT=<theta^2> for particles and PT=<B> for g-rays [enter: "upper_limit  0"]; 
    Note: for each resonance: # upper limits < # open channels! negative values of Dwg, DGx, DPT indicate factor uncertainties 
    Ecm(keV) DEcm(keV) J   G1(eV)    DG1(eV) L1  PT       DPT      G2(eV)    DG2(eV)   L2  PT       DPT      G3(eV)    DG3(eV)   L3  PT       DPT      Exf(keV) Int  Frac
    0.00     0.00      0   0.00E+00  0       0   0.0E+00  0.0E+00  0.0E+00   0.0E+00   0   0        0        0         0         0   0        0        0        0    
    ********************************************************************************************************************************************************************
    Interference between Resonances [numerical integration only]
    Note: + for positive, - for negative interference; +- if interference sign is unknown
    Ecm(keV) DEcm(keV) Jr   G1(eV)    DG1(eV)   L1   PT   DPT    G2(eV)     DG2(eV)    L2  PT	DPT    G3(eV)    DG3(eV)   L3  PT   DPT    Exf  
    !+- 
    0.0      0.0       0.0  0.0       0.0       0    0.0  0.0    0.0        0.0        0   0    0.0    0.0       0.0       0   0    0.0    0.0  
    0.0      0.0       0.0  0.0       0.0       0    0.0  0.0    0.0        0.0        0   0    0.0    0.0       0.0       0   0    0.0    0.0  
    ********************************************************************************************************************************************************************
    Input file and PDF at NT selected temperatures only
    Note: default values are used for Input file range if Min=Max=0.0
    T9      Min     Max
    0.01    0.0     0.0
    0.1     0.0     0.0
    ********************************************************************************************************************************************************************
    Comments:
    xxx

  #+END_SRC

* Reaction Definition
  #+BEGIN_SRC text
    39K(p,g)40Ca
    **************************
  #+END_SRC
  - This labels the reaction
  - *Warning*: This gets read into plots later, so I recommends being
    accurate

* Reacting particles
  #+BEGIN_SRC text
    1H              ! Zproj                           (or nuclide's name to use AME2020)
    39K             ! Ztarget
    4He             ! Zexitparticle                   (=0 when only 2 channels open)
    1H              ! Aproj                           (input either NUCLEAR MASS in amu, or the nuclide's name, e.g. 23Na)
    39K             ! Atarget   
    4He             ! Aexitparticle                   (=0 when only 2 channels open)
    1H              ! Jproj                           (or nuclide's name to use NuBase 2020)
    39K             ! Jtarget
    4He             ! Jexitparticle                   (=0 when only 2 channels open)
  #+END_SRC
  - Can enter
    - *atomic numbers* (integers), *nuclear mass*, *spin* (as
      decimals)
    - *isotope symbol*
  - If isotopic symbol is used, the AME2020 nuclear mass is used

* Separation energies
  #+BEGIN_SRC text
    AME             ! projectile separation energy    (NUCLEAR Q value; enter AME if nuclide names are used)
    AME             ! exit particle separation energy (=0 when only 2 channels open; enter AME if nuclide names are used)
  #+END_SRC
  - Enter
    - Nuclear Q-value or
    - ''AME''
  - *Warnings*:
    - Do not mix-and-match ''AME'' with nuclear masses above
    - Especially do not enter atomic masses and ''AME''

* Final reaction definitions
  #+BEGIN_SRC text
    1.25            ! Radius parameter R0 (fm)
    2               ! Gamma-ray channel number        (=2 if ejectile is a g-ray; =3 otherwise)
  #+END_SRC
  - Make sure R0 agrees with any C2S assumptions
  - *double and triple check* the gamma-ray channel. I've lost many hours to this... 

* RatesMC Control
  #+BEGIN_SRC text
    1.0             ! Minimum energy for numerical integration (keV)
    10000           ! Number of random samples (>5000 for better statistics)
    0               ! =0 for rate output at all temperatures; =NT for rate output at selected temperatures
    0 0             ! (wg, E): =0 for no correlation; =1 for correlation
  #+END_SRC
  - *Minimum energy*: leave at 1 keV
  - *Samples*: Check for convergence. 1000 is too small, 3000 may be fine
  - *NT*: Leave as zero - not implemented!
  - *Correlations*: Take into account correlations? Two numbers needed
    here! We'll come back to this

* Non-resonant section
** Option 1 (preferred)
   Enter tabulated non-resonant (not necessarily DC) S-factor (two 3-line entries)
   #+BEGIN_SRC text
     0      50  100  150  200  250  300  350  400  450  500  550  600  650  700  750  800  850  900  950  1000
    124   119  115  112  108  105  102   99   97   95   93   91   89   88   87   87   86   86   86   86    87
    -10    -9   -8   -7   -6   -5   -4   -3   -3   -3   -3   -3   -3   -2   -2   -2   -2   -2   -1  0.4   0.4
    0  0
    0  0
    0  0
   #+END_SRC
   1) E
   2) S-factor in keV.b
   3) Uncertainty. Enter
      - +ve values: Fractional uncertainty (i.e. 0.4 means 40% uncertainty)
      - -ve values: Factor uncertainty (i.e. -1.4 means a 40% /geometric/)
** Option 2
   Enter quadratic fit to non-resonant S-factor
   #+BEGIN_SRC text
   S(keVb) S'(b)           S''(b/keV)      fracErr Cutoff Energy (keV)
   18.14      -8.93e-3       5.776e-6         0.24     2000.0
   19.68      -0.144         7.934e-4         0.45     239.0
   #+END_SRC
   - Enter the quadratic fit parameters
   - =fracErr= can also be negative for factor uncertainty
   - Cutoff energy is needed. Check S-factor output!
     
* Factor Uncertainties
  If you mean ''$\times$ 1.4 and $\div$ 1.4'', use factor uncertainties!
  #+BEGIN_SRC R :exports both :results output graphics file :file ln.png
    ## The RatesMC input
    mu <- 5
    frac <- 0.4
    fu <- 1.4

    ## Set the plotting parameters
    mypars()
    ## Define the plotting range
    x <- seq(from=0.1,to=10,by=0.01)

    ## Convert RatesMC input how RatesMC would into mu and sigma
    mu.n <- log(mu) - 0.5*log(1+(frac*mu)^2/mu^2)
    sd.n <- sqrt(log(1+(frac*mu)^2/mu^2))
    y.norm <- dlnorm(x, meanlog=mu.n,sdlog=sd.n)
    print(mu.n)
    print(sd.n)
    ## Plot how RatesMC interprets fractional uncertainty
    plot(x,y.norm,type='l',xlab="x",ylab="P(x)",ylim=c(0,0.3),xlim=c(0,10))
    ##abline(v=c(5+0.05,5-0.05))

    ## Convert factor uncertainty input how RatesMC does
    mu.ln <- log(mu)
    sd.ln <- log(fu)
    y.lnorm <- dlnorm(x, meanlog=mu.ln, sdlog=sd.ln)
    ## and plot
    lines(x,y.lnorm,col="red",lty=2)

    legend("topright",legend=c("Fractional","Factor"),lty=c(1,2),col=c("black","red"))
    #+END_SRC
  #+RESULTS:
  [[file:ln.png]]

* Resonances
  #+BEGIN_SRC text
    Ecm(keV) DEcm(keV) wg(eV)     Dwg(eV)    J   G1(eV)    DG1(eV)   L1  G2(eV)    DG2(eV)   L2  G3(eV)    DG3(eV)   L3  Exf(keV) Int  Corr/Frac
    0.0      0.00      0          0          0   0.0E+00   0.0E+00   0   0.0E+00   0.0E+00   0   0.00E+00  0.00E+00  0   0.0      0   
  #+END_SRC
  - These are fairly self explanatory
  - Remember to use the correct units
  - -ve /factor uncertainties/ can be used for
    - Resonance strengths
    - Partial widths
  - The ''end''
    #+BEGIN_SRC text
      Int  Corr/Frac
      0    we   0.5
    #+END_SRC
    - =Int= denotes whether resonance should be integrated numerically
      (usually yes if you have widths)
    - =Corr=
      - flag with =w= to enable width or strength correlations for this resonance
      - flag with =e= to enable energy correlations for this resonance
    - =Frac=
      - Use when you're not sure of a resonance's J$^{\pi}$

* Fractional resonances
  - Say you have a 150 keV resonance. It's either
    - J=0.5, Gammap = 1e-5 eV, Gammag = 3 eV
    - J=1.5, Gammap = 1e-8 eV, Gammag = 3 eV
    with a 50% probability of each
  - Enter the following
    #+BEGIN_SRC text
      150.0  1.0    0    0   0.5   1.0E-05   1.0E-06   0   3.0E+00   0.1E+00   0   0.00E+00  0.00E+00  0   0.0      0   0.5
      +             0    0   1.5   1.0E-08   1.0E-09   1   3.0E+00   0.1E+00   0   0.00E+00  0.00E+00  0   0.0      0   0.5
    #+END_SRC


* Resonance peculiarities

** Sub-threshold resonances
   - If entering a sub-threshold resonance, there is no partial width!
   - Enter $\theta_{sp}^2  C^2S$
   - $\theta_{sp}^{2}$: Single particle reduced width
   - $C^2S$: Spectroscopic Factor

** Commented-out resonances
   - Put an exclamation point before the resonance:
     #+BEGIN_SRC text
     ! 150.0  1.0    0    0   0.5   1.0E-05   1.0E-06   0   3.0E+00   0.1E+00   0   0.00E+00  0.00E+00  0   0.0      0         
     #+END_SRC


* Upper limits of resonances
  - No resonance strengths
  - Each partial width has two new inputs
    #+BEGIN_SRC text
      Ecm(keV) DEcm(keV) J   G1(eV)    DG1(eV) L1  PT       DPT      
      150.00   1.00      0   1.00E-3   0       0   4.0E-02  -3  
    #+END_SRC
  - =DG= *must* be 0
  - =PT= is the mean of the Porter-Thomas distribution
    - See Pogrebnyak, Howard & Iliadis et al. (2013)
      https://doi.org/10.1103/physrevc.88.015808
  - =DPT= is the uncertainty in =PT=. -ve numbers are factor
    uncertainties (I like =-3=)

* Interferences
  #+BEGIN_SRC text
    Ecm(keV) DEcm(keV) Jr   G1(eV)    
    +-                               
    150.0    2.0       1.5  1.0E-03 ...       
    1250.0   2.0       1.5  5.2E+00 ...       
  #+END_SRC
  - Unless you know the sign of the interference, leave =+-=
  - Input is just like upper limits
  - Leave =PT= and =DPT= as 0 unless you need them

* Comments
  - Put key comments at the bottom!

* Downloading and Setup
  #+BEGIN_SRC sh
    # Download
    git clone https://github.com/rlongland/RatesMC.git
    # Make a build directory
    cd RatesMC
    mkdir build
    cd build
    # Compile
    cmake ..
    make
  #+END_SRC
  - Now you have a clean RatesMC folder!
  - For each reaction, copy the contents of this folder somewhere. e.g.:
    =~/RatesMC/Evaluation/25Mg-pg/=
  - *Be sure not to overwrite your RatesMC.in file*

* Running
  - Run with =./RatesMC=
  - *or* =./runall.sh=!
    - This will run RatesMC, then produce all the R plots you need
    - S-factor plot is made immediately for error checking while you wait
    - This script will ask about Hauser-Feshbach... 
  - =RatesMC.out= and others are updated during calculation
  - =RatesMC.log= is important to read

* Analysis scripts
  Most of these will need to be edited to make sure the correct files
  are being analysed.
** =PlotUncertainties.R=
   New code to plot the 1, 2, and 3-sigma uncertainties of the rate, as
   well as a comparison to literature if desired
** =PlotCompare.R=
   Plots the 1-sigma uncertainties of the present rate and a literature
   rate
** =PlotContribution.R=
   Plots the contribution bands of each resonance as a function of
   temperature
** =PlotIntegrand.R=
   Plots the integrands for broad resonances. Be sure to adjust the
   temperature you're looking for at the top of the code
** =PlotSFactor.R=
   Plots the astrophysical s-factor for all resonances. This has now
   been updated from the previous version to work well! 
** =PlotPanel6.R=
   Plots the reaction rate probability density distribution for 6
   useful temperatures
** =PlotPanelall.R=
   Plots the reaction rate probability density distribution for all
   temperatures
** =PlotParameter.R=
   Diagnostics. Check the probability distribution of input parameters
** =PlotCorrelations.R=
   Diagnostics. Show correlations of rate (at a given temperature) with
   all input parameters. Also show corner plot correlations between
   everything (should be mostly uncorrelated unless energy or width
   correlations are turned on)
** =PlotPT.R=
   Diagnostics. Plot the Porter-Thomas samples


